server:
  port: 10500

spring:
  application:
    name: cloud-gateway
  redis:
    host: 192.168.153.128
    port: 6379
    lettuce:
      pool:
        max-active: 50
        max-idle: 50
        max-wait: 5000
        min-idle: 5
        time-between-eviction-runs: 1
  security:
    oauth2:
      resourceserver:
        jwt:
          # 配置RSA的公钥访问地址
          jwk-set-uri: 'http://localhost:10400/auth/rsa/publicKey'
    # 自定义网关访问白名单
    gateway-allowed-uri-list:
      - "/**"
      - "/actuator/**"
      - "/auth/oauth/token"
      - "/doc.html"
      - "/webjars/**"
      - "/v2/api-docs"
      - "/swagger-resources/**"
#      - "/auth/**"
#      - "/api/**"
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.153.128:8848
        username: nacos
        password: nacos
    sentinel:
#      scg:
#        fallback:
#          mode: response
#          response-body: '{"code": 403, "mes": "限流了"}'
      transport:
        dashboard: 192.168.153.128:8080
      eager: true
      datasource:
        flow:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            data-id: ${spring.application.name}-flow
            group-id: DEFAULT_GROUP
            data-type: json
            rule-type: gw-flow

    gateway:
      discovery:
        locator:
          # enabled default false
#          enabled: true
          lower-case-service-id: true
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - SwaggerFilter=true
            - AuthenticationFilter=false
#            - StripPrefix=1
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/account/**
          filters:
            - SwaggerFilter= true
            - AuthenticationFilter= true
#            - StripPrefix=1
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order/**
          filters:
            - SwaggerFilter= true
            - RequestTimeFilter=true
#            - StripPrefix=1
        - id: product-service
          # LoadBalance
          uri: lb://product-service
          predicates:
            - Path=/product/**
          filters:
            # filter if request uri ends with '/v2/api-docs'
            - SwaggerFilter= true
            - RequestTimeFilter=false
##             StripPrefix=2 if /account/aaa/bbb then dispatch to lb://cloud-account-service/bbb
#            - StripPrefix=1